Kernel command line: -q -f put multi-oom run multi-oom
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
hd0:0: detected 321 sector (160 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 105 sector (52 kB) disk, model "QEMU HARDDISK", serial "QM00003"
Formatting file system...done.
Boot complete.
Putting 'multi-oom' into the file system...
Executing 'multi-oom':
(multi-oom) begin
child_2_O: exit(-1)
Kernel PANIC at ../../threads/synch.c:217 in lock_acquire(): assertion `!lock_held_by_current_thread (lock)' failed.
Call stack: 0x800421898b 0x800420ac3d 0x800421e0f1 0x800421c6e0 0x800420717f 0x800421df05 0x800421d9a1 0x80042096e6 0x8004209b04 0x800421e09a 0x800421dd1b 0x800421dac4 0x40011c 0x4003a7 0x40044b 0x400fb0.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
child_2_O: exit(-1)
Kernel PANIC recursion at ../../threads/synch.c:217 in lock_acquire().
child_2_O: exit(-1)
child_2_O: exit(-1)
